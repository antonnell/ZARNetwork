/* eslint-disable no-console */
import React, { Component } from 'react';
import { View, Text, TouchableOpacity } from 'react-native';
import { connect } from 'react-redux';
import styles from './styles';
import { encrypt } from '../../controllers/utility/encryption';
import { decryptPayload } from '../../controllers/utility/decryption';
// eslint-disable-next-line no-unused-vars
import { REGISTER_TYPE, LOGIN_TYPE } from '../../controllers/redux/base/constants';
import { registerUser, loginUser } from '../../controllers/redux/auth/action';

class HomeScreen extends Component {
  constructor(props) {
    super(props);
    this.state = {
      email: 'testuser1623@gmail.com',
      password: '12345678',
      pin: '1234',
      fingerPrint: 'pqr',
      mobileNumber: '9112345678',
      // encData: null,
    };
    this.encryptPayload = this.encryptPayload.bind(this);
  }

  encryptPayload() {
    // eslint-disable-next-line no-unused-vars
    const { email, password, pin, fingerPrint, mobileNumber } = this.state;
    // const payload = {
    //   email,
    //   password,
    //   pin,
    //   fingerprint: fingerPrint,
    //   mobile_number: mobileNumber,
    // };

    const payload = {
      email,
      password,
    };

    console.log('call encrypt');
    encrypt(payload, LOGIN_TYPE, encData => {
      console.log('res encrypt', encData);
      const data = JSON.stringify(encData);
      console.log(data, 'data');
      if (encData !== null) {
        // this.props
        //   .registerUser(data)
        //   .then(result => {
        //     console.log('result : ', result);
        //   })
        //   .catch(error => {
        //     console.log('error : ', error);
        //   });

        // eslint-disable-next-line react/destructuring-assignment
        this.props
          // eslint-disable-next-line react/prop-types
          .loginUser(data)
          .then(result => {
            console.log('result : ', result);
          })
          .catch(error => {
            console.log('error : ', error);
          });
        // this.setState({
        //   encData,
        // });
      }
    });
  }

  // eslint-disable-next-line class-methods-use-this
  decryptPayload() {
    // const { encData } = this.state;
    console.log('call decrypt');
    // if (encData !== null) {
    // const decData = decryptPayload({
    //   e:
    //     '003700350068004b0065004b0055004200720036004f002b0065002b003600690058004b002f006900370035002b002f004600690043003100360031007500430048007000650067002f00360071006200790051002b007200630057005a004700320038004c004f007a006a00590062002f004d006d00320065006d007a004d006d006f006200620042004c0063006f0044004600560043004700370077004b00570067004e006a0070005200480048007000340044003000590062006a00610033006a004d0064002f00410077005300490048007a0055003900710034005200420076007800660052002b00380058007000590063006f0071006f0052004c00690073006c0052006e006c006f0035004f0065005900440070002b007500330054005700460047004a00340045004b0070006c0073004e006a003800330047005a0043007800650078004c004a00460067004f0067002f0032006a00450038007a0032004100770058002f00610034006e0059006200720048004400770043006e00420045004b00430047006e006d004b00370063006f002b0034006d002f004e004100630042007a0047006b006a00770059006c0071006e004b0042004500300073006100510043006b004b006200710039004900770043004a006e0037004c005300690059004b00450066006500710036002b006f00460036004e0065006d003300610031004f006b003200720039006400570049002f006800630075004c00650044002b0055006e0036005900440057007600410045007a0036003400590045002b005a007600670064004300340030002f0031006b007600710035003400540071005900670071006f004d00300042006400420063007400480058005600560034004100670036006d0053006f005200480053005500460046007800660053005a006e0052006e005a003500580061004c005a00390057004700740063007a005700720049005900750078004e005600420037004a00690048006e0072006a00680064004f00530064004600460059007000540049006a007600470073006e0044004d00710058004700300058004200350057006b0032006d006500740061004a006d002f00490052006c006600610045006500640059007900670034004c0062006e005100590051004f00460074004c006e0052006d0072004e005500310063004b0046005a003900750054006d006d005300440075006b0051006100740059007400570068004f005500740064006e006b0064004c00390033006c0034007400370045006e006600350031004a0043004e003600310065006600660072004c005100350062004f002f00360047006f00700077002f0054005800420057004b00430051004c006b00500067005a00660054006e0044005800330035002f004800750076004a0061004400470037006c007000420062004c0062005700730052007a00780052004a0047007900500042004c006900670069004b00490064005000780058004f0057004f00390039004300300065007600520068004600690062004700760039007000390058003200390078006d006500770050004b006a004900530065006e0057007000640079004a006c0077004a004d004a0039007500480058004e007800370033005a002b0046006c004c007600610044007100550042002f006d00470059006c004900660057004300580057006e0048002b00480053002b006800760074006a005900420065004b007a004f0062002f005000530066005900530057004e00510055002b004500480042004600740030007400620061004e007900540072007100730071005a006b0063006b006a00700069006900490070007a00670059007400320049003100680055006600490077004d007400450043006a00470037002f00370069003800640049004a00490073004e005300550049004900610068006e00570047003400750066006e006d0057003100520061004900490073006a0032004d00630072004d006c00340079002b003700470058002b0032003500470055007000360061002f00510052006e00370052006b004c0048004900540046006d00740059006b0059006b00790077006c0038005a00620074004a00360077006a007800480063006e00520046006c006a0070007900530058004a0056006c005a006700540057003700620067003100330072003900730044005100760077003900480039004c0058006f00460064007300720052004a00320061007600580056004600430041005400300041002b006100640073004e0037006b006e006d00480073004e005a00590061002b0075004500720073004f003700760041003d003d',
    //   m:
    //     '006f0062006500790020007700680061006c00650020006d0075006600660069006e002000730075006700610072002000730063006f00750074002000730074006100660066002000610069006d0020006c0065006d006f006e0020006d0065006e00740069006f006e0020006600610069006e00740020006d0061006300680069006e00650020007300680069006e0065',
    //   t: 1545114518711,
    //   s: 'e0f056f7e07782b7073d13aedcb4e3a4bcd10c89b1adab9e41d214d8b729fd94',
    // });
    // console.log('decData : ', decData);

    const decData = decryptPayload({
      e:
        '007000460033004f007500770067005400470056006500480058003300390058002b00720045003500380034007200500053007300450044003800560076006b004300730051006b004400340032007000560050005700780058004600570054006b0030003100750061002f00760063006f006b00420052007a00500052004f00680065006300700041006e006700610066004a007300330052004b00770052005800410043002f0037005000440042007500770045006c005100470031004c00450031007700760076002b004b006e007a007700570036003900430065003000320034006800740065007a006b004400480065004100780047006d004b006b0055007400670059002b0061005900720062006e0048006c0057005600620077004e0042006800430067006a00430058006a006e003300450066004d0044004100770034005100500058004100590039004100690067004300340059003100720064004c0032004b0070003500300065005a006300610033006e004b005500350069003400610062007a005a004a00300032004500490048002b00730061004a004300730053004e007a006c0078004200770045004d0038006d004d005400510059004c004400780054004f00610076006e002f0070007a0034006600590047006a0038007a007600510064004c004400380071006b00460055005a0033005600470056007100410072006f00770074004f004300610073004e00720037004a00520067004100790077004c00440036005100720073004a005600650045006a0051006c0051006600670078003400770063006c006a007600470047004c0062006b00630066007700740050004c0061004e00310046005100780067005000410068004d002b00310032006d0074004c005200580050003300540053006e005000630049007600540069004f006b00710033006b0046006b0045006c0061006d004c004d006300790041007800580059004d00480039007500510051007a0064002f006a007800510036004c004f0045007200670068006900640073002b0033007600490061004a00390041004800680064004500630054007000300063006300590039004d003900490038007a00790036006e0069004c0048006c003500650072007500360056004a005500520065007a0035003600730030005500320034007a0052006b0044002b005400460042005a00700071004200660048004b0051006e004c00520045006c004e007900310050004b003400760056005600620065004b003000610058004800430055002b00660076004a004100450075004f004200300047004200340044006300300049006c00570062007300540054004f004c0039003300430054004c00570034003900530050005200650073006d006700480074005a006800780036003500700039004300770055005a005300410044004d005a004900350079004e0037005400330047004f0075006e00730030005000630063006400370068006e006d0057003100790075005300560048004f006c005500650057006a005800610065004100660063006700480068003800470032006c0038005300440055006f004700610059006f00780050006800410059006200610042004a00300034004e00340074002f004600780072006500660042002f007900590071004b0065004300740061006100650051004e00570050006b005300770065005800440055004b004d0038004a00550057006e0052006c00720069006a006700740064005900790031006500770079004300560035006400340052005900770034006e0033004a007a0065002b007300420076004a004c003400660052003700780031004e00700064006f006300540033007a002b0038007300520043004700550034004f0037006600740075006700510067003800540059004e006f0077005800770049006d007a006a0054004400320048004900680045004c0069006a00650056006e0054004c004800560043004f00620033002f007a0070002b0075003400360042004f004500540065003000610067006b0056004b00520030006e0052007700790074002b002f007000470057007a004800460038004b0076007a00710046004d004200430070004700430067004f007300500062004b0047007a0068002f00360071006f005a0049004e006d002b007700490046003500550034005a0047007a004d0048007100460057003200460043004c0079006c0046004b006100370053007a0077006f006f006600520045006e0067007a002b0079006300760045004e0057002b0077004e0030007500300057006e004e004f007400590070006c0059002f007800380058007a0064006c003200770063003800420057005a00380076004d0067006d004b006e006f006b003d',
      m:
        '0072006f0075006700680020007200610072006500200064006900760065007200740020007200610074006500200065007800740065006e0064002000760065006c007600650074002000670061006400670065007400200073006c0061006200200065006c00690074006500200073006c006f0074002000620065006300610075007300650020006700720075006e0074',
      t: 1545116962369,
      s: '6e6e44b83f2dba3560bf44bc6918525f4f0758305f370cb7b92d644ee32dd155',
    });
    console.log('decData for type : ', decData);
    // }
  }

  render() {
    return (
      <View style={styles.Container}>
        <Text>Fantom-Pay</Text>
        <TouchableOpacity
          style={{ width: 200, backgroundColor: 'green', margin: 4, padding: 4 }}
          onPress={() => this.encryptPayload()}
        >
          <Text>Encode Payload</Text>
        </TouchableOpacity>
        <TouchableOpacity
          style={{ width: 200, backgroundColor: 'green', margin: 4, padding: 4 }}
          onPress={() => this.decryptPayload()}
        >
          <Text>Decrypt Payload</Text>
        </TouchableOpacity>
      </View>
    );
  }
}

const mapDispatchToProps = {
  registerUser,
  loginUser,
};

export default connect(
  null,
  mapDispatchToProps
)(HomeScreen);
